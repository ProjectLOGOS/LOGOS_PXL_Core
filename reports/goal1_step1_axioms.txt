C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\AnthroPraxis\subdomains\Life\Spec.v:7: Admitted. (* must be proved before CI passes; no Admitted in final branch *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\Axiopraxis\subdomains\Beauty\Spec.v:7: Admitted. (* must be proved before CI passes; no Admitted in final branch *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\Axiopraxis\subdomains\Truth\Spec.v:7: Admitted. (* must be proved before CI passes; no Admitted in final branch *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\CosmoPraxis\subdomains\Space\Spec.v:7: Admitted. (* must be proved before CI passes; no Admitted in final branch *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\ErgoPraxis\subdomains\Truth\Spec.v:7: Admitted. (* must be proved before CI passes; no Admitted in final branch *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\modal\FrameSpec.v:56:   (* Test axiom: [a]f ? <a>f (if deterministic) *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\modal\FrameSpec.v:58:   Proof. intros H a f; unfold Box_a, Dia_a; destruct H as [Hser]; eapply provable_D; eauto. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\modal\FrameSpec.v:60:   (* Composition axiom under KD45: [a][a]f ? [a]f *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\modal\FrameSpec.v:62:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\modal\FrameSpec.v:64:   (* Mix axiom under KD45: <a>f ? [a]<a>f *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\modal\FrameSpec.v:66:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\systems\Systems.v:54:   (* Test axiom: [a]f ? <a>f (if deterministic) *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\systems\Systems.v:56:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\systems\Systems.v:58:   (* Composition axiom under KD45: [a][a]f ? [a]f *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\systems\Systems.v:60:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\systems\Systems.v:62:   (* Mix axiom under KD45: <a>f ? [a]<a>f *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\DynaPraxis\systems\Systems.v:64:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\HexiPraxis\modal\FrameSpec.v:55:   (* Success axiom: [i]f ? f (agency implies truth) *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\HexiPraxis\modal\FrameSpec.v:57:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\HexiPraxis\modal\FrameSpec.v:61:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\HexiPraxis\modal\FrameSpec.v:65:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\HexiPraxis\systems\Systems.v:53:   (* Success axiom: [i]f ? f (agency implies truth) *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\HexiPraxis\systems\Systems.v:55:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\HexiPraxis\systems\Systems.v:59:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\experimental\HexiPraxis\systems\Systems.v:63:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\GnosiPraxis\subdomains\Truth\Spec.v:7: Admitted. (* must be proved before CI passes; no Admitted in final branch *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\interfaces\ChronoPraxis.v:3: (* TODO: remove Admitted. — constructive only. No classical axioms. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\interfaces\ChronoPraxis.v:34: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\interfaces\ChronoPraxis.v:56: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\interfaces\ChronoPraxis.v:73: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoAxioms.v:16: (* Removed: Axiom chi_reflexivity : forall m : chi, m = m. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoAxioms.v:19: (* Axiom chi_distinction : chi_A <> chi_B /\ chi_B <> chi_C /\ chi_A <> chi_C. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoAxioms.v:33: Axiom chi_universal_compatibility : forall m1 m2 : chi, chi_compatible m1 m2.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoAxioms.v:41: (* Axiom P_chi_identity : forall (m : chi) (p : P_chi m), p = p. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoAxioms.v:53: (* Removed: Axiom tau_reflexive : forall t : tau, t <= t. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoAxioms.v:54: (* Removed: Axiom tau_antisymmetric : forall t1 t2 : tau, t1 <= t2 -> t2 <= t1 -> t1 = t2. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoAxioms.v:55: (* Removed: Axiom tau_transitive : forall t1 t2 t3 : tau, t1 <= t2 -> t2 <= t3 -> t1 <= t3. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoAxioms.v:68: Axiom eternal_timeless : forall (e : Eternal), e = e.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoMappings.v:75: (* Axiom eternal_projection_A : forall (e : ChronoAxioms.Eternal), 
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoMappings.v:78: Axiom eternal_projection_B : forall (e : ChronoAxioms.Eternal), 
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoMappings.v:81: Axiom eternal_projection_C : forall (e : ChronoAxioms.Eternal), 
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoMappings.v:85: (* Axiom temporal_lifting_A : forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_A), 
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoMappings.v:88: Axiom temporal_lifting_B : forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_B), 
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoMappings.v:91: Axiom temporal_lifting_C : forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_C), 
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoPraxis_PXL_Proofs.v:7: (* TODO: remove Admitted. — constructive only. No classical axioms. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoPraxis_PXL_Proofs.v:25:   (* Each PXL axiom case maps to corresponding CPX axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoPraxis_PXL_Proofs.v:61:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoPraxis_PXL_Proofs.v:71:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoPraxis_PXL_Proofs.v:79:   (* Non-contradiction follows from CPX axiom system *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoPraxis_PXL_Proofs.v:80:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoPraxis_PXL_Proofs.v:89:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoPraxis_PXL_Proofs.v:100:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoPraxis_PXL_Proofs.v:179:   (* This contradicts the axiom system *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoPraxis_PXL_Proofs.v:180:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoState.v:75: (* Axiom temporal_state_consistency : forall (ctx : AgentContext) (base : BaseState) (t : nat),
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoState.v:79: Axiom atemporal_state_consistency : forall (base : BaseState) (b a : nat),
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\substrate\ChronoState.v:83: Axiom eternal_state_identity : forall (base : BaseState),
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\tactics\ChronoTactics.v:1: (* TODO: remove Admitted. — constructive only. No classical axioms. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\tactics\ChronoTactics.v:57: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\tactics\ChronoTactics.v:61: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\ModalAxiomsSound.v:24: Axiom forces_Box : forall w f, forces w (Box f) <-> (forall u, can_R w u -> forces u f).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\ModalAxiomsSound.v:25: Axiom forces_Dia : forall w f, forces w (Dia f) <-> (exists u, can_R w u /\ forces u f).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\ModalAxiomsSound.v:26: Axiom forces_Impl : forall w f ?, forces w (Impl f ?) <-> (forces w f -> forces w ?).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\ModalAxiomsSound.v:152: (* Alternative Brouwer axiom B: f ? ??f (also valid in S5) *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\ModalRules.v:55: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\ModalRules.v:60: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\ModalRules.v:68: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\ModalRules.v:70: (* K axiom: ?(f??) ? (?f ? ??) is valid on all frames *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:75:   (* Test 1.1: S4 T axiom from ModalPraxis *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:79:   (* Test 1.2: S4 4 axiom from ModalPraxis *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:83:   (* Test 1.3: S4 K axiom from ModalPraxis *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:96:     (* Frame property implies semantic validity of T axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:107:   (* Test 2.1: S5 B axiom from ModalPraxis *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:111:   (* Test 2.2: S5 5 axiom from ModalPraxis *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:115:   (* Test 2.3: S5 T axiom from ModalPraxis *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:119:   (* Test 2.4: S5 4 axiom from ModalPraxis *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:123:   (* Test 2.5: S5 K axiom from ModalPraxis *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:136:     (* Frame properties imply semantic validity of B axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:146:   (* Test 3.1: S4 and S5 both derive same K axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:147:   Example test_K_axiom_universality :
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:154:     (* Both S4 and S5 derive the same K axiom from ModalPraxis *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:170:   (* Test 3.3: S4 T axiom also derivable in S5 *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:171:   Example test_S4_in_S5_T_axiom :
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:177:     (* S5 includes S4 theorems - T axiom derivable in both *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:181:   (* Test 3.4: S4 4 axiom also derivable in S5 *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:182:   Example test_S4_in_S5_4_axiom :
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:188:     (* S5 includes S4 theorems - 4 axiom derivable in both *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:322:  *    - T axiom derivation from ModalPraxis
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:323:  *    - 4 axiom derivation from ModalPraxis  
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:324:  *    - K axiom derivation from ModalPraxis
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:328:  *    - B axiom derivation from ModalPraxis
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:329:  *    - 5 axiom derivation from ModalPraxis
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:330:  *    - T axiom derivation from ModalPraxis
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:331:  *    - 4 axiom derivation from ModalPraxis
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:332:  *    - K axiom derivation from ModalPraxis
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\OverlayEquivalenceTests.v:336:  *    - K axiom universality across systems
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\Systems.v:27:   (* Basic modal logic K: just K axiom and Necessitation rule *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\Systems.v:29:   Definition K_axiom := provable_K.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\Systems.v:44:   Definition T_axiom := provable_T.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\Systems.v:45:   Definition Four_axiom := provable_4.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\Systems.v:61:   Definition T_axiom := provable_T.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\Systems.v:62:   Definition Five_axiom := provable_5.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\Systems.v:63:   Definition B_axiom := provable_B.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ModalStrength\Systems.v:75:   (* Alternative S5 characterization using Brouwer axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:3: (* TODO: remove Admitted. — constructive oTheorem pairwise_convergence : 
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:10:   Admitted.axioms. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:53:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:58:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:63:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:69:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:74:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:79:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:87:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:92:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:105:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:117:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:125:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:136:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:170:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:250:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\ChronoProofs.v:256:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ChronoPraxis\theorems\MetaTheorems.v:28:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\DerivedAxioms.v:112: (* D axiom under serial frames *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\NormalBase.v:70: (* K axiom: valid on all frames - foundation of normal modal logic *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\Systems.v:27: (* K System: Basic normal modal logic - K axiom + Necessitation *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\Systems.v:29:   Definition K_axiom := provable_K.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\Systems.v:37: (* T System: K + T axiom (reflexive frames) *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\Systems.v:40:   Definition T_axiom := provable_T.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\Systems.v:49:   Definition Four_axiom := provable_4.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\Systems.v:61:   Definition Five_axiom := provable_5.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\Systems.v:62:   Definition B_axiom := provable_B.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\Systems.v:74: (* KD System: K + D axiom (serial frames) *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\Systems.v:77:   Definition D_axiom := provable_D.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\Systems.v:83: (* KB System: K + B axiom (symmetric frames) *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\ModalPraxis\theorems\Systems.v:86:   Definition B_axiom := provable_B.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\TopoPraxis\Core.v:13:   Admitted. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\infra\TropoPraxis\Tropo.v:17: (* For Box, K axiom implies mp for Box implication? Wait, valid_K is more complex.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\GnosiPraxis\modal\AgentFrames.v:54:     Theorem K_axiom    : K_Frame -> forall f ?, Prov (Impl (Box (Impl f ?)) (Impl (Box f) (Box ?))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\GnosiPraxis\modal\AgentFrames.v:60:     Theorem T_axiom  : T_Frame  -> forall f, Prov (Impl (Box f) f).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\GnosiPraxis\modal\AgentFrames.v:63:     Theorem Four_axiom : S4_Frame -> forall f, Prov (Impl (Box f) (Box (Box f))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\GnosiPraxis\modal\AgentFrames.v:66:     Theorem Five_axiom : S5_Frame -> forall f, Prov (Impl (Dia f) (Box (Dia f))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\GnosiPraxis\modal\AgentFrames.v:69:     Theorem B_axiom : S5_Frame -> forall f, Prov (Impl f (Box (Dia f))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\GnosiPraxis\modal\AgentFrames.v:72:     Theorem D_axiom : KD_Frame -> forall f, Prov (Impl (Box f) (Dia f)).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\ThemiPraxis\modal\NormFrames.v:46:   Theorem K_axiom : K_Frame -> forall f ?, Prov (Impl (O (Impl f ?)) (Impl (O f) (O ?))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\ThemiPraxis\modal\NormFrames.v:53:   Theorem D_axiom : KD_Frame -> forall f, Prov (Impl (O f) (P f)).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\ThemiPraxis\modal\NormFrames.v:57:   Theorem Four_axiom : KD45_Frame -> forall f, Prov (Impl (O f) (O (O f))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\ThemiPraxis\modal\NormFrames.v:60:   Theorem Five_axiom : KD45_Frame -> forall f, Prov (Impl (P f) (O (P f))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\ThemiPraxis\systems\Systems.v:42:   Theorem K_axiom : K_Frame -> forall f ?, Prov (Impl (O (Impl f ?)) (Impl (O f) (O ?))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\ThemiPraxis\systems\Systems.v:49:   Theorem D_axiom : KD_Frame -> forall f, Prov (Impl (O f) (P f)).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\ThemiPraxis\systems\Systems.v:53:   Theorem Four_axiom : KD45_Frame -> forall f, Prov (Impl (O f) (O (O f))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\pillars\ThemiPraxis\systems\Systems.v:56:   Theorem Five_axiom : KD45_Frame -> forall f, Prov (Impl (P f) (O (P f))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\TeloPraxis\subdomains\Will\Spec.v:7: Admitted. (* must be proved before CI passes; no Admitted in final branch *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\modules\IEL\ThemiPraxis\subdomains\Truth\Spec.v:7: Admitted. (* must be proved before CI passes; no Admitted in final branch *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Boolean.v:5:   Theorem def_and : Prov (Impl f (Impl ? ?)) -> Prov (And f ?). Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Boolean.v:6:   Theorem def_or  : Prov (Or f ?). Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Boolean.v:7:   Theorem def_top : Prov Top. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Boolean.v:8:   Theorem def_bot : Prov Bot. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Boolean.v:11:     True. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Conservativity.v:5:     forall f, Prov (eliminate_macros f) -> Prov f. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Filtration.v:4:   Theorem filtration : forall M f, exists M', filtered M f M' /\ (* size bound *) True. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Filtration.v:5:   Corollary fmp : forall f, ~ Prov f -> exists finite_model M, M ? f. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Filtration.v:7:     forall d, decidable (fun f => md f <= d /\ Prov f). Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Intertranslation.v:6:   Theorem UoT_sound : forall f, Prov (Iff (U (T f)) f). Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Intertranslation.v:7:   Theorem ToU_complete : forall ?, s5_valid (iff (T (U ?)) ?). Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Intertranslation.v:8:   Theorem conservativity_S5_to_PXL : forall ?, s5_valid ? -> Prov (U ?). Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_Intertranslation.v:9:   Theorem conservativity_PXL_to_S5 : forall f, Prov f -> s5_valid (T f). Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_ModalDuals.v:5:   Theorem dia_def : Prov (Iff (Dia f) (Neg (Box (Neg f)))). Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_ModalDuals.v:6:   Theorem box_dia_dual1 : Prov (Impl (Box f) (Neg (Dia (Neg f)))). Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_ModalDuals.v:7:   Theorem box_dia_dual2 : Prov (Impl (Dia f) (Neg (Box (Neg f)))). Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_NormalForms.v:4:   Theorem nnf_exists : forall f, exists f', Prov (Iff f f') /\ nnf f'. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\phase6_expressiveness\PXL_Expressiveness_NormalForms.v:5:   Theorem modal_cnf_exists : forall f, exists f', Prov (Iff f f') /\ mcnf f'. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Assumptions.v:6: Axiom NotAll_to_ExNot_R :
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Assumptions.v:12: (* Axiom decidable_cons_finite : ... *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Demo.v:66: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Demo.v:74:     | Impl Bot _ => true  (* Ex falso axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Demo.v:76:         if form_eq_dec psi psi' then true else provable_upto k' phi  (* K axiom pattern *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Demo.v:93:     + (* For complex Impl patterns, admit for now - full proof would handle all axiom patterns *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Demo.v:95: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Demo.v:223: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Demo.v:308: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Demo.v:311:    1. We replace the axiom with a concrete construction
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Simple.v:87: (* The constructive replacement for the Lindenbaum axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Simple.v:114: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Simple.v:122:    Instead of: Axiom constructive_lindenbaum : ...
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\Constructive_Lindenbaum_Simple.v:137:    This replaces the non-constructive axiom with an explicit
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXLv3_Meta.v:51: (* === S5 axiom schemata become theorems in this model === *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXLv3_Meta.v:237: Theorem B_axiom : forall p, p -> ? ? p.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:47:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:51:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:54: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:57: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:66: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:90: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:93: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:96: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:99: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:102: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:105: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Instance.v:109: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Interface.v:18:   Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Interface.v:20:   Proof. Admitted.  (* Use nec from Prov inductive *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Truth_WF.v:125:     (* Check if phi is an axiom instance or can be derived in k' steps *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Truth_WF.v:126:     (* For now, simplified to check basic axiom patterns *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Truth_WF.v:129:     | Impl psi (Impl chi psi) => true  (* K axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Truth_WF.v:265: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Truth_WF.v:308: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Truth_WF.v:381:   (* Use totality on Dia (Neg f), dual axiom, and dia_intro to derive a contradiction, forcing Box f *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Work.v:7: Axiom enum_complete : forall f, exists n, enum n = f.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Work.v:24: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Work.v:27: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Work.v:30: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Work.v:61: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Work.v:66: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Completeness_Work.v:98:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Decidability.v:162: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Decidability.v:169: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Decidability.v:183: (* Identity axiom: a ? a derivable in Hilbert system *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Decidability.v:185: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Decidability.v:189: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Decidability.v:218: Proof. Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Decidability.v:222:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Decidability.v:241: (* We need a weaker axiom that's actually provable *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Decidability.v:275:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Decidability.v:368: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_Decidability.v:375: Admitted. *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneNecessity.v:13: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneNecessity.v:16: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneNecessity.v:19: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneNecessity.v:22: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneNecessity.v:26: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneNecessity.v:29: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneNecessity.v:32: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneNecessity.v:36: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneNecessity.v:40: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneNecessity.v:43: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneNecessity.v:46: Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneProofs.v:7:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneProofs.v:10:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneProofs.v:13:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneProofs.v:16:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneProofs.v:19:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneProofs.v:22:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneProofs.v:25:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneProofs.v:28:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneProofs.v:31:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\pxl-minimal-kernel-main\coq\PXL_TriuneProofs.v:34:   Admitted.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\DynaPraxis\DynaPraxis_Smoke.v:50:   (* Test axiom: [a]f ? <a>f (if deterministic) *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\DynaPraxis\DynaPraxis_Smoke.v:54:   (* Composition axiom under KD45: [a][a]f ? [a]f *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\DynaPraxis\DynaPraxis_Smoke.v:58:   (* Mix axiom under KD45: <a>f ? [a]<a>f *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\HexiPraxis\HexiPraxis_Smoke.v:49:   (* Success axiom: [i]f ? f (agency implies truth) *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ThemiPraxis\ThemiPraxis_Smoke.v:38:   Theorem K_axiom : K_Frame -> forall f g, Prov (Impl (O (Impl f g)) (Impl (O f) (O g))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ThemiPraxis\ThemiPraxis_Smoke.v:45:   Theorem D_axiom : KD_Frame -> forall f, Prov (Impl (O f) (P f)).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ThemiPraxis\ThemiPraxis_Smoke.v:49:   Theorem Four_axiom : KD45_Frame -> forall f, Prov (Impl (O f) (O (O f))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ThemiPraxis\ThemiPraxis_Smoke.v:52:   Theorem Five_axiom : KD45_Frame -> forall f, Prov (Impl (P f) (O (P f))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ThemiPraxis\ThemiPraxis_Smoke.v:60:   Proof. apply K_axiom. Qed.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ThemiPraxis\ThemiPraxis_Smoke.v:62:   Proof. apply D_axiom. Qed.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ThemiPraxis\ThemiPraxis_Smoke.v:64:   Proof. apply Four_axiom. Qed.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ThemiPraxis\ThemiPraxis_Smoke.v:66:   Proof. apply Five_axiom. Qed.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalAxiomsSoundTests.v:24: (* Verify that all modal axiom schemata are available *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalAxiomsSoundTests.v:25: Check provable_T.     (* T axiom: ?f ? f *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalAxiomsSoundTests.v:26: Check provable_4.     (* 4 axiom: ?f ? ??f *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalAxiomsSoundTests.v:27: Check provable_5.     (* 5 axiom: ?f ? ??f *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalAxiomsSoundTests.v:28: Check provable_B.     (* B axiom: f ? ??f *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalAxiomsSoundTests.v:69: (* Alternative S5 axiomatization using Brouwer axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalAxiomsSoundTests.v:72:   Prov (Impl f (Box (Dia f))).                (* B - Brouwer axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalRulesTests.v:20: Parameter KSystem_K_axiom : forall f ?, Prov (Impl (Box (Impl f ?)) (Impl (Box f) (Box ?))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalRulesTests.v:27: Check provable_K.             (* K axiom: ?(f??) ? (?f ? ??) *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalRulesTests.v:31: Check KSystem_K_axiom.        (* K system has K axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalRulesTests.v:32: Check S4System_T_available.   (* S4 system has T axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalRulesTests.v:33: Check S5System_5_available.   (* S5 system has 5 axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalRulesTests.v:35: (* Example: instantiate the K axiom with concrete formulas *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalRulesTests.v:41: (* The K axiom applies to any formulas, including our examples *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalRulesTests.v:56:   Prov (Impl (Box (Impl f ?)) (Impl (Box f) (Box ?))) /\     (* K axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalRulesTests.v:66:   (* K system provides K axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\ModalRulesTests.v:74:   - apply KSystem_K_axiom.
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\OverlayEquivalenceTests.v:59:   Prov (Impl (Box f) f) /\                    (* T axiom available via UM-IEL *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\OverlayEquivalenceTests.v:60:   Prov (Impl (Box f) (Box (Box f))).          (* 4 axiom available via UM-IEL *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\OverlayEquivalenceTests.v:68:   Prov (Impl (Box f) f) /\                    (* T axiom available via UM-IEL *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\OverlayEquivalenceTests.v:69:   Prov (Impl f (Box (Dia f))) /\              (* B axiom available via UM-IEL *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\OverlayEquivalenceTests.v:70:   Prov (Impl (Dia f) (Box (Dia f))).          (* 5 axiom available via UM-IEL *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\OverlayEquivalenceTests.v:85:   (* K axiom and Necessitation available in both *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\OverlayEquivalenceTests.v:98:   - (* K axiom *) apply (S4_Equiv.S4_K_from_UM Hrefl_S4 Htran_S4).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\UMIEL_Tests.v:43: Check provable_K.             (* K axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\UMIEL_Tests.v:45: Check provable_T.             (* T axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\UMIEL_Tests.v:46: Check provable_4.             (* 4 axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\UMIEL_Tests.v:47: Check provable_5.             (* 5 axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\UMIEL_Tests.v:48: Check provable_B.             (* B axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\UMIEL_Tests.v:49: Check provable_D.             (* D axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\UMIEL_Tests.v:91: Example serial_axiom_KD : forall ?, Prov (Impl (Box ?) (Dia ?)).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\UMIEL_Tests.v:94: Example symmetric_axiom_KB : forall ?, Prov (Impl ? (Box (Dia ?))).
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\UMIEL_Tests.v:103:   (* S5 system adds symmetry via 5 axiom *)
C:\Users\proje\OneDrive\Desktop\Project_Directory\LOGOS_PXL_Core\tests\UMIEL_Tests.v:107:   (* KB system adds symmetry via B axiom *)
