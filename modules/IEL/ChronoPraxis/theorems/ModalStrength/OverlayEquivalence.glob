DIGEST 3935dee4b7395c7f8b254bfa978bf822
FOverlayEquivalence
R24:30 Coq.Program.Program <> <> lib
R32:45 Coq.Setoids.Setoid <> <> lib
ax 519:522 <> form
ax 542:545 <> Prov
R553:556 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R549:552 OverlayEquivalence <> form defax
ax 573:575 <> Box
R583:586 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R579:582 OverlayEquivalence <> form defax
R587:590 OverlayEquivalence <> form defax
ax 603:605 <> Dia
R613:616 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R609:612 OverlayEquivalence <> form defax
R617:620 OverlayEquivalence <> form defax
ax 633:636 <> Impl
R644:647 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R640:643 OverlayEquivalence <> form defax
R652:655 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R648:651 OverlayEquivalence <> form defax
R656:659 OverlayEquivalence <> form defax
def 674:676 <> set
R685:688 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R681:684 OverlayEquivalence <> form defax
ax 705:707 <> mct
R714:717 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R711:713 OverlayEquivalence <> set def
def 735:743 <> can_world
R748:749 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R751:753 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R757:759 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R765:766 Coq.Init.Specif <> ::type_scope:'{'_x_':'_x_'|'_x_'}' not
R754:756 OverlayEquivalence <> set def
binder 750:750 <> G:13
R760:762 OverlayEquivalence <> mct defax
R764:764 OverlayEquivalence <> G:13 var
ax 779:783 <> can_R
R796:799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R787:795 OverlayEquivalence <> can_world def
R809:812 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R800:808 OverlayEquivalence <> can_world def
ax 829:834 <> forces
R847:850 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R838:846 OverlayEquivalence <> can_world def
R855:858 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R851:854 OverlayEquivalence <> form defax
mod 912:913 <> S4
ind 924:932 S4 Reflexive
constr 944:954 S4 reflexive_R
rec 924:932 S4 Reflexive
proj 944:954 S4 reflexive_R
binder 965:965 <> w:19
R968:972 OverlayEquivalence <> can_R defax
R974:974 OverlayEquivalence <> w:19 var
R976:976 OverlayEquivalence <> w:19 var
ind 987:996 S4 Transitive
constr 1008:1019 S4 transitive_R
rec 987:996 S4 Transitive
proj 1008:1019 S4 transitive_R
binder 1030:1030 <> w:22
binder 1032:1032 <> u:23
binder 1034:1034 <> v:24
R1046:1049 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1037:1041 OverlayEquivalence <> can_R defax
R1043:1043 OverlayEquivalence <> w:22 var
R1045:1045 OverlayEquivalence <> u:23 var
R1059:1062 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1050:1054 OverlayEquivalence <> can_R defax
R1056:1056 OverlayEquivalence <> u:23 var
R1058:1058 OverlayEquivalence <> v:24 var
R1063:1067 OverlayEquivalence <> can_R defax
R1069:1069 OverlayEquivalence <> w:22 var
R1071:1071 OverlayEquivalence <> v:24 var
R1078:1079 OverlayEquivalence S4 <> mod
mod 1090:1091 <> S5
ind 1102:1110 S5 Reflexive
constr 1122:1132 S5 reflexive_R
rec 1102:1110 S5 Reflexive
proj 1122:1132 S5 reflexive_R
binder 1143:1143 <> w:27
R1146:1150 OverlayEquivalence <> can_R defax
R1152:1152 OverlayEquivalence <> w:27 var
R1154:1154 OverlayEquivalence <> w:27 var
ind 1165:1173 S5 Symmetric
constr 1185:1195 S5 symmetric_R
rec 1165:1173 S5 Symmetric
proj 1185:1195 S5 symmetric_R
binder 1206:1206 <> w:30
binder 1208:1208 <> u:31
R1220:1223 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1211:1215 OverlayEquivalence <> can_R defax
R1217:1217 OverlayEquivalence <> w:30 var
R1219:1219 OverlayEquivalence <> u:31 var
R1224:1228 OverlayEquivalence <> can_R defax
R1230:1230 OverlayEquivalence <> u:31 var
R1232:1232 OverlayEquivalence <> w:30 var
ind 1243:1252 S5 Transitive
constr 1264:1275 S5 transitive_R
rec 1243:1252 S5 Transitive
proj 1264:1275 S5 transitive_R
binder 1286:1286 <> w:34
binder 1288:1288 <> u:35
binder 1290:1290 <> v:36
R1302:1305 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1293:1297 OverlayEquivalence <> can_R defax
R1299:1299 OverlayEquivalence <> w:34 var
R1301:1301 OverlayEquivalence <> u:35 var
R1315:1318 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1306:1310 OverlayEquivalence <> can_R defax
R1312:1312 OverlayEquivalence <> u:35 var
R1314:1314 OverlayEquivalence <> v:36 var
R1319:1323 OverlayEquivalence <> can_R defax
R1325:1325 OverlayEquivalence <> w:34 var
R1327:1327 OverlayEquivalence <> v:36 var
R1334:1335 OverlayEquivalence S5 <> mod
ind 1372:1380 <> Reflexive
constr 1393:1403 <> reflexive_R
rec 1372:1380 <> Reflexive
proj 1393:1403 <> reflexive_R
binder 1415:1415 <> w:39
R1418:1422 OverlayEquivalence <> can_R defax
R1424:1424 OverlayEquivalence <> w:39 var
R1426:1426 OverlayEquivalence <> w:39 var
ind 1435:1443 <> Symmetric
constr 1456:1466 <> symmetric_R
rec 1435:1443 <> Symmetric
proj 1456:1466 <> symmetric_R
binder 1478:1478 <> w:42
binder 1480:1480 <> u:43
R1492:1495 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1483:1487 OverlayEquivalence <> can_R defax
R1489:1489 OverlayEquivalence <> w:42 var
R1491:1491 OverlayEquivalence <> u:43 var
R1496:1500 OverlayEquivalence <> can_R defax
R1502:1502 OverlayEquivalence <> u:43 var
R1504:1504 OverlayEquivalence <> w:42 var
ind 1513:1522 <> Transitive
constr 1534:1545 <> transitive_R
rec 1513:1522 <> Transitive
proj 1534:1545 <> transitive_R
binder 1556:1556 <> w:46
binder 1558:1558 <> u:47
binder 1560:1560 <> v:48
R1572:1575 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1563:1567 OverlayEquivalence <> can_R defax
R1569:1569 OverlayEquivalence <> w:46 var
R1571:1571 OverlayEquivalence <> u:47 var
R1585:1588 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1576:1580 OverlayEquivalence <> can_R defax
R1582:1582 OverlayEquivalence <> u:47 var
R1584:1584 OverlayEquivalence <> v:48 var
R1589:1593 OverlayEquivalence <> can_R defax
R1595:1595 OverlayEquivalence <> w:46 var
R1597:1597 OverlayEquivalence <> v:48 var
ax 1633:1642 <> provable_K
binder 1653:1654 <> φ:50
binder 1656:1657 <> ψ:51
R1660:1663 OverlayEquivalence <> Prov defax
R1666:1669 OverlayEquivalence <> Impl defax
R1672:1674 OverlayEquivalence <> Box defax
R1677:1680 OverlayEquivalence <> Impl defax
R1682:1683 OverlayEquivalence <> φ:50 var
R1685:1686 OverlayEquivalence <> ψ:51 var
R1691:1694 OverlayEquivalence <> Impl defax
R1697:1699 OverlayEquivalence <> Box defax
R1701:1702 OverlayEquivalence <> φ:50 var
R1706:1708 OverlayEquivalence <> Box defax
R1710:1711 OverlayEquivalence <> ψ:51 var
ax 1727:1748 <> provable_necessitation
binder 1759:1760 <> φ:54
R1763:1763 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1785:1789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 1771:1771 <> w:55
R1774:1779 OverlayEquivalence <> forces defax
R1781:1781 OverlayEquivalence <> w:55 var
R1783:1784 OverlayEquivalence <> φ:54 var
R1790:1793 OverlayEquivalence <> Prov defax
R1796:1798 OverlayEquivalence <> Box defax
R1800:1801 OverlayEquivalence <> φ:54 var
ax 1815:1824 <> provable_T
R1843:1851 OverlayEquivalence <> Reflexive class
binder 1836:1840 <> Hrefl:58
R1862:1871 OverlayEquivalence <> Transitive class
binder 1855:1859 <> Htran:59
binder 1874:1875 <> φ:60
R1878:1881 OverlayEquivalence <> Prov defax
R1884:1887 OverlayEquivalence <> Impl defax
R1890:1892 OverlayEquivalence <> Box defax
R1894:1895 OverlayEquivalence <> φ:60 var
R1898:1899 OverlayEquivalence <> φ:60 var
ax 1913:1922 <> provable_4
R1941:1949 OverlayEquivalence <> Reflexive class
binder 1934:1938 <> Hrefl:63
R1960:1969 OverlayEquivalence <> Transitive class
binder 1953:1957 <> Htran:64
binder 1972:1973 <> φ:65
R1976:1979 OverlayEquivalence <> Prov defax
R1982:1985 OverlayEquivalence <> Impl defax
R1988:1990 OverlayEquivalence <> Box defax
R1992:1993 OverlayEquivalence <> φ:65 var
R1997:1999 OverlayEquivalence <> Box defax
R2002:2004 OverlayEquivalence <> Box defax
R2006:2007 OverlayEquivalence <> φ:65 var
ax 2023:2032 <> provable_B
R2050:2058 OverlayEquivalence <> Symmetric class
binder 2044:2047 <> Hsym:68
R2069:2078 OverlayEquivalence <> Transitive class
binder 2062:2066 <> Htran:69
R2089:2097 OverlayEquivalence <> Reflexive class
binder 2082:2086 <> Hrefl:70
binder 2100:2101 <> φ:71
R2104:2107 OverlayEquivalence <> Prov defax
R2110:2113 OverlayEquivalence <> Impl defax
R2115:2116 OverlayEquivalence <> φ:71 var
R2119:2121 OverlayEquivalence <> Box defax
R2124:2126 OverlayEquivalence <> Dia defax
R2128:2129 OverlayEquivalence <> φ:71 var
ax 2145:2154 <> provable_5
R2172:2180 OverlayEquivalence <> Symmetric class
binder 2166:2169 <> Hsym:74
R2191:2200 OverlayEquivalence <> Transitive class
binder 2184:2188 <> Htran:75
R2211:2219 OverlayEquivalence <> Reflexive class
binder 2204:2208 <> Hrefl:76
binder 2222:2223 <> φ:77
R2226:2229 OverlayEquivalence <> Prov defax
R2232:2235 OverlayEquivalence <> Impl defax
R2238:2240 OverlayEquivalence <> Dia defax
R2242:2243 OverlayEquivalence <> φ:77 var
R2247:2249 OverlayEquivalence <> Box defax
R2252:2254 OverlayEquivalence <> Dia defax
R2256:2257 OverlayEquivalence <> φ:77 var
sec 2297:2304 <> S4_Equiv
var  2318:2322 S4_Equiv Hrefl
var  2341:2345 S4_Equiv Htran
R2326:2337 OverlayEquivalence <> Reflexive class
R2349:2361 OverlayEquivalence <> Transitive class
def 2447:2461 <> S4_UM_Reflexive
R2465:2473 OverlayEquivalence <> Reflexive class
binder 2482:2482 <> w:82
R2487:2500 OverlayEquivalence <> reflexive_R def
R2502:2502 OverlayEquivalence <> w:82 var
def 2518:2533 <> S4_UM_Transitive
R2537:2546 OverlayEquivalence <> Transitive class
binder 2555:2555 <> w:83
binder 2557:2557 <> u:84
binder 2559:2559 <> v:85
R2564:2578 OverlayEquivalence <> transitive_R def
R2584:2584 OverlayEquivalence <> v:85 var
R2582:2582 OverlayEquivalence <> u:84 var
R2580:2580 OverlayEquivalence <> w:83 var
prf 2691:2711 <> S4_T_from_ModalPraxis
binder 2722:2723 <> φ:86
R2726:2729 OverlayEquivalence <> Prov defax
R2732:2735 OverlayEquivalence <> Impl defax
R2738:2740 OverlayEquivalence <> Box defax
R2742:2743 OverlayEquivalence <> φ:86 var
R2746:2747 OverlayEquivalence <> φ:86 var
R2777:2786 OverlayEquivalence <> provable_T defax
R2788:2802 OverlayEquivalence <> S4_UM_Reflexive def
R2804:2819 OverlayEquivalence <> S4_UM_Transitive def
R2777:2786 OverlayEquivalence <> provable_T defax
R2788:2802 OverlayEquivalence <> S4_UM_Reflexive def
R2804:2819 OverlayEquivalence <> S4_UM_Transitive def
prf 2841:2861 <> S4_4_from_ModalPraxis
binder 2872:2873 <> φ:87
R2876:2879 OverlayEquivalence <> Prov defax
R2882:2885 OverlayEquivalence <> Impl defax
R2888:2890 OverlayEquivalence <> Box defax
R2892:2893 OverlayEquivalence <> φ:87 var
R2897:2899 OverlayEquivalence <> Box defax
R2902:2904 OverlayEquivalence <> Box defax
R2906:2907 OverlayEquivalence <> φ:87 var
R2939:2948 OverlayEquivalence <> provable_4 defax
R2950:2964 OverlayEquivalence <> S4_UM_Reflexive def
R2966:2981 OverlayEquivalence <> S4_UM_Transitive def
R2939:2948 OverlayEquivalence <> provable_4 defax
R2950:2964 OverlayEquivalence <> S4_UM_Reflexive def
R2966:2981 OverlayEquivalence <> S4_UM_Transitive def
prf 3003:3023 <> S4_K_from_ModalPraxis
binder 3034:3035 <> φ:88
binder 3037:3038 <> ψ:89
R3041:3044 OverlayEquivalence <> Prov defax
R3047:3050 OverlayEquivalence <> Impl defax
R3053:3055 OverlayEquivalence <> Box defax
R3058:3061 OverlayEquivalence <> Impl defax
R3063:3064 OverlayEquivalence <> φ:88 var
R3066:3067 OverlayEquivalence <> ψ:89 var
R3072:3075 OverlayEquivalence <> Impl defax
R3078:3080 OverlayEquivalence <> Box defax
R3082:3083 OverlayEquivalence <> φ:88 var
R3087:3089 OverlayEquivalence <> Box defax
R3091:3092 OverlayEquivalence <> ψ:89 var
R3127:3136 OverlayEquivalence <> provable_K defax
R3127:3136 OverlayEquivalence <> provable_K defax
prf 3157:3179 <> S4_Nec_from_ModalPraxis
binder 3190:3191 <> φ:90
R3194:3194 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3216:3220 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 3202:3202 <> w:91
R3205:3210 OverlayEquivalence <> forces defax
R3212:3212 OverlayEquivalence <> w:91 var
R3214:3215 OverlayEquivalence <> φ:90 var
R3221:3224 OverlayEquivalence <> Prov defax
R3227:3229 OverlayEquivalence <> Box defax
R3231:3232 OverlayEquivalence <> φ:90 var
R3264:3285 OverlayEquivalence <> provable_necessitation defax
R3264:3285 OverlayEquivalence <> provable_necessitation defax
R3306:3313 OverlayEquivalence S4_Equiv <> sec
sec 3325:3332 <> S5_Equiv
var  3346:3350 S5_Equiv Hrefl
var  3369:3372 S5_Equiv Hsym
var  3391:3395 S5_Equiv Htran
R3354:3365 OverlayEquivalence <> Reflexive class
R3376:3387 OverlayEquivalence <> Symmetric class
R3399:3411 OverlayEquivalence <> Transitive class
def 3499:3513 <> S5_UM_Reflexive
R3517:3525 OverlayEquivalence <> Reflexive class
binder 3534:3534 <> w:95
R3539:3552 OverlayEquivalence <> reflexive_R def
R3554:3554 OverlayEquivalence <> w:95 var
def 3570:3584 <> S5_UM_Symmetric
R3588:3596 OverlayEquivalence <> Symmetric class
binder 3605:3605 <> w:96
binder 3607:3607 <> u:97
R3612:3625 OverlayEquivalence <> symmetric_R def
R3629:3629 OverlayEquivalence <> u:97 var
R3627:3627 OverlayEquivalence <> w:96 var
def 3645:3660 <> S5_UM_Transitive
R3664:3673 OverlayEquivalence <> Transitive class
binder 3682:3682 <> w:98
binder 3684:3684 <> u:99
binder 3686:3686 <> v:100
R3691:3705 OverlayEquivalence <> transitive_R def
R3711:3711 OverlayEquivalence <> v:100 var
R3709:3709 OverlayEquivalence <> u:99 var
R3707:3707 OverlayEquivalence <> w:98 var
prf 3727:3747 <> S5_B_from_ModalPraxis
binder 3758:3759 <> φ:101
R3762:3765 OverlayEquivalence <> Prov defax
R3768:3771 OverlayEquivalence <> Impl defax
R3773:3774 OverlayEquivalence <> φ:101 var
R3777:3779 OverlayEquivalence <> Box defax
R3782:3784 OverlayEquivalence <> Dia defax
R3786:3787 OverlayEquivalence <> φ:101 var
R3819:3828 OverlayEquivalence <> provable_B defax
R3830:3844 OverlayEquivalence <> S5_UM_Symmetric def
R3846:3861 OverlayEquivalence <> S5_UM_Transitive def
R3863:3877 OverlayEquivalence <> S5_UM_Reflexive def
R3819:3828 OverlayEquivalence <> provable_B defax
R3830:3844 OverlayEquivalence <> S5_UM_Symmetric def
R3846:3861 OverlayEquivalence <> S5_UM_Transitive def
R3863:3877 OverlayEquivalence <> S5_UM_Reflexive def
prf 3899:3919 <> S5_5_from_ModalPraxis
binder 3930:3931 <> φ:102
R3934:3937 OverlayEquivalence <> Prov defax
R3940:3943 OverlayEquivalence <> Impl defax
R3946:3948 OverlayEquivalence <> Dia defax
R3950:3951 OverlayEquivalence <> φ:102 var
R3955:3957 OverlayEquivalence <> Box defax
R3960:3962 OverlayEquivalence <> Dia defax
R3964:3965 OverlayEquivalence <> φ:102 var
R3997:4006 OverlayEquivalence <> provable_5 defax
R4008:4022 OverlayEquivalence <> S5_UM_Symmetric def
R4024:4039 OverlayEquivalence <> S5_UM_Transitive def
R4041:4055 OverlayEquivalence <> S5_UM_Reflexive def
R3997:4006 OverlayEquivalence <> provable_5 defax
R4008:4022 OverlayEquivalence <> S5_UM_Symmetric def
R4024:4039 OverlayEquivalence <> S5_UM_Transitive def
R4041:4055 OverlayEquivalence <> S5_UM_Reflexive def
prf 4077:4097 <> S5_T_from_ModalPraxis
binder 4108:4109 <> φ:103
R4112:4115 OverlayEquivalence <> Prov defax
R4118:4121 OverlayEquivalence <> Impl defax
R4124:4126 OverlayEquivalence <> Box defax
R4128:4129 OverlayEquivalence <> φ:103 var
R4132:4133 OverlayEquivalence <> φ:103 var
R4163:4172 OverlayEquivalence <> provable_T defax
R4174:4188 OverlayEquivalence <> S5_UM_Reflexive def
R4190:4205 OverlayEquivalence <> S5_UM_Transitive def
R4163:4172 OverlayEquivalence <> provable_T defax
R4174:4188 OverlayEquivalence <> S5_UM_Reflexive def
R4190:4205 OverlayEquivalence <> S5_UM_Transitive def
prf 4227:4247 <> S5_4_from_ModalPraxis
binder 4258:4259 <> φ:104
R4262:4265 OverlayEquivalence <> Prov defax
R4268:4271 OverlayEquivalence <> Impl defax
R4274:4276 OverlayEquivalence <> Box defax
R4278:4279 OverlayEquivalence <> φ:104 var
R4283:4285 OverlayEquivalence <> Box defax
R4288:4290 OverlayEquivalence <> Box defax
R4292:4293 OverlayEquivalence <> φ:104 var
R4325:4334 OverlayEquivalence <> provable_4 defax
R4336:4350 OverlayEquivalence <> S5_UM_Reflexive def
R4352:4367 OverlayEquivalence <> S5_UM_Transitive def
R4325:4334 OverlayEquivalence <> provable_4 defax
R4336:4350 OverlayEquivalence <> S5_UM_Reflexive def
R4352:4367 OverlayEquivalence <> S5_UM_Transitive def
prf 4389:4409 <> S5_K_from_ModalPraxis
binder 4420:4421 <> φ:105
binder 4423:4424 <> ψ:106
R4427:4430 OverlayEquivalence <> Prov defax
R4433:4436 OverlayEquivalence <> Impl defax
R4439:4441 OverlayEquivalence <> Box defax
R4444:4447 OverlayEquivalence <> Impl defax
R4449:4450 OverlayEquivalence <> φ:105 var
R4452:4453 OverlayEquivalence <> ψ:106 var
R4458:4461 OverlayEquivalence <> Impl defax
R4464:4466 OverlayEquivalence <> Box defax
R4468:4469 OverlayEquivalence <> φ:105 var
R4473:4475 OverlayEquivalence <> Box defax
R4477:4478 OverlayEquivalence <> ψ:106 var
R4513:4522 OverlayEquivalence <> provable_K defax
R4513:4522 OverlayEquivalence <> provable_K defax
prf 4543:4565 <> S5_Nec_from_ModalPraxis
binder 4576:4577 <> φ:107
R4580:4580 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4602:4606 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 4588:4588 <> w:108
R4591:4596 OverlayEquivalence <> forces defax
R4598:4598 OverlayEquivalence <> w:108 var
R4600:4601 OverlayEquivalence <> φ:107 var
R4607:4610 OverlayEquivalence <> Prov defax
R4613:4615 OverlayEquivalence <> Box defax
R4617:4618 OverlayEquivalence <> φ:107 var
R4650:4671 OverlayEquivalence <> provable_necessitation defax
R4650:4671 OverlayEquivalence <> provable_necessitation defax
R4692:4699 OverlayEquivalence S5_Equiv <> sec
