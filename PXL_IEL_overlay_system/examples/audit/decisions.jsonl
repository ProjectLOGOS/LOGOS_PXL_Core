{"ts": 1759682640, "obligation": "BOX(Good(demo_action) and TrueP(safe) and TrueP(validated) and Coherent(system) and Coherent(resources))", "provenance": {"user": "demo_user", "source": "main_demo", "timestamp": 1759682640}, "decision": "DENY", "error": "Proof request timed out", "proof": {"ok": false, "error": "Proof request timed out", "goal": "BOX(Good(demo_action) and TrueP(safe) and TrueP(validated) and Coherent(system) and Coherent(resources))"}, "timestamp_iso": "2025-10-05T12:44:00"}
{"ts": 1759682642, "obligation": "BOX(DIAMOND(Goal(plan_4014)))", "provenance": {"planner": "archon", "source": "main_demo", "timestamp": 1759682642}, "decision": "DENY", "error": "Proof request timed out", "proof": {"ok": false, "error": "Proof request timed out", "goal": "BOX(DIAMOND(Goal(plan_4014)))"}, "timestamp_iso": "2025-10-05T12:44:02"}
{"ts": 1759682644, "obligation": "BOX(preserves_good(increment,x) and preserves_coherence(increment))", "provenance": {"operation": "demo_bijection", "source": "main_demo", "timestamp": 1759682644}, "decision": "DENY", "error": "Proof request timed out", "proof": {"ok": false, "error": "Proof request timed out", "goal": "BOX(preserves_good(increment,x) and preserves_coherence(increment))"}, "timestamp_iso": "2025-10-05T12:44:04"}
{"ts": 1759682646, "obligation": "BOX(consistency(semantics,axioms) and coherent_system(drift_system))", "provenance": {"system_id": "drift_system", "source": "main_demo", "timestamp": 1759682646}, "decision": "DENY", "error": "Proof request timed out", "proof": {"ok": false, "error": "Proof request timed out", "goal": "BOX(consistency(semantics,axioms) and coherent_system(drift_system))"}, "timestamp_iso": "2025-10-05T12:44:06"}
{"ts": 1759682648, "obligation": "BOX(Good(DENY_action) and not TrueP(safe) and Coherent(system))", "provenance": {"user": "demo_user", "source": "failure_demo", "timestamp": 1759682648}, "decision": "DENY", "error": "Proof request timed out", "proof": {"ok": false, "error": "Proof request timed out", "goal": "BOX(Good(DENY_action) and not TrueP(safe) and Coherent(system))"}, "timestamp_iso": "2025-10-05T12:44:08"}
{"ts": 1759688335, "obligation": "BOX(Good(demo_action) and TrueP(safe) and TrueP(validated) and Coherent(system) and Coherent(resources))", "provenance": {"user": "demo_user", "source": "main_demo", "timestamp": 1759688335}, "decision": "DENY", "error": "Kernel hash mismatch: got e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855, expected c54592b5bc637d1bdb650bcc614a3c5de09dda1eabef6cced2e74fd5c53ca49c", "proof_time_ms": 2, "proof": {"goal": "BOX(Good(demo_action) and TrueP(safe) and TrueP(validated) and Coherent(system) and Coherent(resources))", "id": "8c5689dc-7d3e-4ddf-b39f-d7e01527badf", "kernel_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "latency_ms": 0, "ok": true, "proof_method": "fallback"}, "timestamp_iso": "2025-10-05T14:18:55"}
{"ts": 1759688335, "obligation": "BOX(DIAMOND(Goal(plan_4299)))", "provenance": {"planner": "archon", "source": "main_demo", "timestamp": 1759688335}, "decision": "DENY", "error": "Goal could not be proven", "proof_time_ms": 25, "proof": {"error": "Goal could not be proven", "goal": "BOX(DIAMOND(Goal(plan_4299)))", "id": "a925c9aa-6ed5-43a8-8ef2-684ea6c29be7", "kernel_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "latency_ms": 0, "ok": false}, "timestamp_iso": "2025-10-05T14:18:55"}
{"ts": 1759688335, "obligation": "BOX(preserves_good(increment,x) and preserves_coherence(increment))", "provenance": {"operation": "demo_bijection", "source": "main_demo", "timestamp": 1759688335}, "decision": "DENY", "error": "Kernel hash mismatch: got e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855, expected c54592b5bc637d1bdb650bcc614a3c5de09dda1eabef6cced2e74fd5c53ca49c", "proof_time_ms": 3, "proof": {"goal": "BOX(preserves_good(increment,x) and preserves_coherence(increment))", "id": "bf143cdf-1176-4a51-af84-492ce166c5d0", "kernel_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "latency_ms": 0, "ok": true, "proof_method": "fallback"}, "timestamp_iso": "2025-10-05T14:18:55"}
{"ts": 1759688335, "obligation": "BOX(consistency(semantics,axioms) and coherent_system(drift_system))", "provenance": {"system_id": "drift_system", "source": "main_demo", "timestamp": 1759688335}, "decision": "DENY", "error": "Kernel hash mismatch: got e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855, expected c54592b5bc637d1bdb650bcc614a3c5de09dda1eabef6cced2e74fd5c53ca49c", "proof_time_ms": 5, "proof": {"goal": "BOX(consistency(semantics,axioms) and coherent_system(drift_system))", "id": "54d2c433-3d9b-4741-bbd2-73ccecb684c4", "kernel_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "latency_ms": 0, "ok": true, "proof_method": "fallback"}, "timestamp_iso": "2025-10-05T14:18:55"}
{"ts": 1759688335, "obligation": "BOX(Good(DENY_action) and not TrueP(safe) and Coherent(system))", "provenance": {"user": "demo_user", "source": "failure_demo", "timestamp": 1759688335}, "decision": "DENY", "error": "Goal contains DENY - proof failed", "proof_time_ms": 5, "proof": {"error": "Goal contains DENY - proof failed", "goal": "BOX(Good(DENY_action) and not TrueP(safe) and Coherent(system))", "id": "4e03c660-c9f5-4f8b-8725-01cc895244b1", "kernel_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "latency_ms": 0, "ok": false}, "timestamp_iso": "2025-10-05T14:18:55"}
{"ts": 1759688353, "obligation": "BOX(Good(demo_action) and TrueP(safe) and TrueP(validated) and Coherent(system) and Coherent(resources))", "provenance": {"user": "demo_user", "source": "main_demo", "timestamp": 1759688353}, "decision": "ALLOW", "proof_time_ms": 3, "proof": {"id": "f68ec936-6c83-46d2-beb0-b80dfa52b751", "kernel_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "goal": "BOX(Good(demo_action) and TrueP(safe) and TrueP(validated) and Coherent(system) and Coherent(resources))", "latency": 0}, "timestamp_iso": "2025-10-05T14:19:13"}
{"ts": 1759688353, "obligation": "BOX(DIAMOND(Goal(plan_2683)))", "provenance": {"planner": "archon", "source": "main_demo", "timestamp": 1759688353}, "decision": "DENY", "error": "Goal could not be proven", "proof_time_ms": 2, "proof": {"error": "Goal could not be proven", "goal": "BOX(DIAMOND(Goal(plan_2683)))", "id": "54bdd543-ed3b-48a7-87d7-e7a879a328fd", "kernel_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "latency_ms": 0, "ok": false}, "timestamp_iso": "2025-10-05T14:19:13"}
{"ts": 1759688353, "obligation": "BOX(preserves_good(increment,x) and preserves_coherence(increment))", "provenance": {"operation": "demo_bijection", "source": "main_demo", "timestamp": 1759688353}, "decision": "ALLOW", "proof_time_ms": 4, "proof": {"id": "577de608-6fc6-45a0-addb-c44abdcbad1e", "kernel_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "goal": "BOX(preserves_good(increment,x) and preserves_coherence(increment))", "latency": 0}, "timestamp_iso": "2025-10-05T14:19:13"}
{"ts": 1759688353, "obligation": "BOX(commutes(multiply,increment) and preserves_coherence_chain(multiply,increment))", "provenance": {"operation": "demo_bijection", "source": "main_demo", "timestamp": 1759688353}, "decision": "ALLOW", "proof_time_ms": 3, "proof": {"id": "7a72f625-2012-480f-a439-fd880e57d9a9", "kernel_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "goal": "BOX(commutes(multiply,increment) and preserves_coherence_chain(multiply,increment))", "latency": 0}, "timestamp_iso": "2025-10-05T14:19:13"}
{"ts": 1759688353, "obligation": "BOX(consistency(semantics,axioms) and coherent_system(drift_system))", "provenance": {"system_id": "drift_system", "source": "main_demo", "timestamp": 1759688353}, "decision": "ALLOW", "proof_time_ms": 3, "proof": {"id": "12de5763-9a77-48e5-b0cd-7ffdfd1a77ea", "kernel_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "goal": "BOX(consistency(semantics,axioms) and coherent_system(drift_system))", "latency": 0}, "timestamp_iso": "2025-10-05T14:19:13"}
{"ts": 1759688353, "obligation": "BOX(Good(DENY_action) and not TrueP(safe) and Coherent(system))", "provenance": {"user": "demo_user", "source": "failure_demo", "timestamp": 1759688353}, "decision": "DENY", "error": "Goal contains DENY - proof failed", "proof_time_ms": 4, "proof": {"error": "Goal contains DENY - proof failed", "goal": "BOX(Good(DENY_action) and not TrueP(safe) and Coherent(system))", "id": "4c090c2e-4b37-40b3-8d00-de575b8edf20", "kernel_hash": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "latency_ms": 0, "ok": false}, "timestamp_iso": "2025-10-05T14:19:13"}
