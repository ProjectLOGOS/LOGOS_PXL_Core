DIGEST 381f29c8d08b5c58b0f576cc49457df6
FModalRules
R24:30 Coq.Program.Program <> <> lib
R32:45 Coq.Setoids.Setoid <> <> lib
ax 373:376 <> form
ax 397:401 <> world
ax 421:429 <> can_world
ax 449:453 <> can_R
R466:469 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R457:465 ModalRules <> can_world defax
R479:482 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R470:478 ModalRules <> can_world defax
ax 499:504 <> forces
R517:520 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R508:516 ModalRules <> can_world defax
R525:528 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R521:524 ModalRules <> form defax
ax 545:548 <> Prov
R556:559 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R552:555 ModalRules <> form defax
ax 576:578 <> Box
R586:589 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R582:585 ModalRules <> form defax
R590:593 ModalRules <> form defax
ax 606:608 <> Dia
R616:619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R612:615 ModalRules <> form defax
R620:623 ModalRules <> form defax
ax 636:639 <> Impl
R647:650 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R643:646 ModalRules <> form defax
R655:658 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R651:654 ModalRules <> form defax
R659:662 ModalRules <> form defax
rec 706:718 <> Cap_ForcesBox
proj 782:791 <> forces_box
binder 721:721 <> W:19
R733:734 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R732:732 ModalRules <> W:19 var
R736:737 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R735:735 ModalRules <> W:19 var
binder 730:730 <> R:20
R754:755 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R753:753 ModalRules <> W:19 var
R760:761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R756:759 ModalRules <> form defax
binder 745:750 <> forces:21
binder 802:802 <> w:23
binder 804:805 <> φ:24
R825:830 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R861:861 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R808:813 ModalRules <> forces:21 var
R818:820 ModalRules <> Box defax
R822:823 ModalRules <> φ:24 var
R815:815 ModalRules <> w:23 var
binder 838:838 <> u:25
R846:849 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R841:841 ModalRules <> R:20 var
R845:845 ModalRules <> u:25 var
R843:843 ModalRules <> w:23 var
R850:855 ModalRules <> forces:21 var
R859:860 ModalRules <> φ:24 var
R857:857 ModalRules <> u:25 var
rec 873:885 <> Cap_ForcesDia
proj 949:958 <> forces_dia
binder 888:888 <> W:27
R900:901 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R899:899 ModalRules <> W:27 var
R903:904 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R902:902 ModalRules <> W:27 var
binder 897:897 <> R:28
R921:922 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R920:920 ModalRules <> W:27 var
R927:928 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R923:926 ModalRules <> form defax
binder 912:917 <> forces:29
binder 969:969 <> w:31
binder 971:972 <> φ:32
R992:997 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1028:1028 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R975:980 ModalRules <> forces:29 var
R985:987 ModalRules <> Dia defax
R989:990 ModalRules <> φ:32 var
R982:982 ModalRules <> w:31 var
R998:1004 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R1006:1007 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 1005:1005 <> u:33
R1013:1016 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R1008:1008 ModalRules <> R:28 var
R1012:1012 ModalRules <> u:33 var
R1010:1010 ModalRules <> w:31 var
R1017:1022 ModalRules <> forces:29 var
R1026:1027 ModalRules <> φ:32 var
R1024:1024 ModalRules <> u:33 var
rec 1040:1053 <> Cap_ForcesImpl
proj 1117:1127 <> forces_impl
binder 1056:1056 <> W:35
R1068:1069 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1067:1067 ModalRules <> W:35 var
R1071:1072 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1070:1070 ModalRules <> W:35 var
binder 1065:1065 <> R:36
R1089:1090 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1088:1088 ModalRules <> W:35 var
R1095:1096 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1091:1094 ModalRules <> form defax
binder 1080:1085 <> forces:37
binder 1138:1138 <> w:39
binder 1140:1141 <> φ:40
binder 1143:1144 <> ψ:41
R1168:1173 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1200:1200 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R1147:1152 ModalRules <> forces:37 var
R1157:1160 ModalRules <> Impl defax
R1162:1163 ModalRules <> φ:40 var
R1165:1166 ModalRules <> ψ:41 var
R1154:1154 ModalRules <> w:39 var
R1185:1188 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1174:1179 ModalRules <> forces:37 var
R1183:1184 ModalRules <> φ:40 var
R1181:1181 ModalRules <> w:39 var
R1189:1194 ModalRules <> forces:37 var
R1198:1199 ModalRules <> ψ:41 var
R1196:1196 ModalRules <> w:39 var
def 2023:2027 <> valid
R2035:2038 ModalRules <> form defax
binder 2030:2031 <> φ:43
binder 2058:2058 <> w:44
R2061:2066 ModalRules <> forces defax
R2068:2068 ModalRules <> w:44 var
R2070:2071 ModalRules <> φ:43 var
ax 2150:2172 <> completeness_from_truth
binder 2183:2184 <> φ:45
R2195:2198 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2187:2191 ModalRules <> valid def
R2193:2194 ModalRules <> φ:45 var
R2199:2202 ModalRules <> Prov defax
R2204:2205 ModalRules <> φ:45 var
prf 2326:2344 <> valid_necessitation
R2348:2360 ModalRules <> Cap_ForcesBox class
R2362:2370 ModalRules <> can_world defax
R2372:2376 ModalRules <> can_R defax
R2378:2383 ModalRules <> forces defax
binder 2348:2383 <> H:48
R2399:2402 ModalRules <> form defax
binder 2396:2397 <> φ:49
R2408:2416 ModalRules <> can_world defax
binder 2406:2406 <> w:50
R2422:2422 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2444:2448 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2430:2430 <> u:51
R2433:2438 ModalRules <> forces defax
R2440:2440 ModalRules <> u:51 var
R2442:2443 ModalRules <> φ:49 var
R2449:2454 ModalRules <> forces defax
R2456:2456 ModalRules <> w:50 var
R2459:2461 ModalRules <> Box defax
R2463:2464 ModalRules <> φ:49 var
R2712:2721 ModalRules <> forces_box meth
R2712:2721 ModalRules <> forces_box meth
R2712:2721 ModalRules <> forces_box meth
prf 2895:2916 <> semantic_necessitation
R2920:2932 ModalRules <> Cap_ForcesBox class
R2934:2942 ModalRules <> can_world defax
R2944:2948 ModalRules <> can_R defax
R2950:2955 ModalRules <> forces defax
binder 2920:2955 <> H:52
binder 2967:2968 <> φ:53
R2973:2973 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2995:2999 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 2981:2981 <> w:54
R2984:2989 ModalRules <> forces defax
R2991:2991 ModalRules <> w:54 var
R2993:2994 ModalRules <> φ:53 var
R3000:3003 ModalRules <> Prov defax
R3006:3008 ModalRules <> Box defax
R3010:3011 ModalRules <> φ:53 var
R3244:3266 ModalRules <> completeness_from_truth defax
R3244:3266 ModalRules <> completeness_from_truth defax
R3443:3461 ModalRules <> valid_necessitation thm
R3443:3461 ModalRules <> valid_necessitation thm
ax 3640:3648 <> soundness
binder 3659:3660 <> φ:55
R3670:3674 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3696:3696 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3663:3666 ModalRules <> Prov defax
R3668:3669 ModalRules <> φ:55 var
binder 3682:3682 <> w:56
R3685:3690 ModalRules <> forces defax
R3692:3692 ModalRules <> w:56 var
R3694:3695 ModalRules <> φ:55 var
prf 3708:3729 <> provable_necessitation
R3733:3745 ModalRules <> Cap_ForcesBox class
R3747:3755 ModalRules <> can_world defax
R3757:3761 ModalRules <> can_R defax
R3763:3768 ModalRules <> forces defax
binder 3733:3768 <> H:59
binder 3780:3781 <> φ:60
R3793:3796 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3786:3789 ModalRules <> Prov defax
R3791:3792 ModalRules <> φ:60 var
R3797:3800 ModalRules <> Prov defax
R3803:3805 ModalRules <> Box defax
R3807:3808 ModalRules <> φ:60 var
binder 4048:4048 <> w:61
R4051:4056 ModalRules <> forces defax
R4058:4058 ModalRules <> w:61 var
binder 4048:4048 <> w:62
R4051:4056 ModalRules <> forces defax
R4058:4058 ModalRules <> w:62 var
R4075:4083 ModalRules <> soundness defax
R4075:4083 ModalRules <> soundness defax
R4181:4202 ModalRules <> semantic_necessitation thm
R4181:4202 ModalRules <> semantic_necessitation thm
prf 4309:4315 <> valid_K
R4319:4331 ModalRules <> Cap_ForcesBox class
R4333:4341 ModalRules <> can_world defax
R4343:4347 ModalRules <> can_R defax
R4349:4354 ModalRules <> forces defax
binder 4319:4354 <> H:63
R4359:4372 ModalRules <> Cap_ForcesImpl class
R4374:4382 ModalRules <> can_world defax
R4384:4388 ModalRules <> can_R defax
R4390:4395 ModalRules <> forces defax
binder 4359:4395 <> H0:64
R4414:4417 ModalRules <> form defax
binder 4408:4409 <> φ:65
binder 4411:4412 <> ψ:66
R4423:4431 ModalRules <> can_world defax
binder 4421:4421 <> w:67
R4437:4442 ModalRules <> forces defax
R4444:4444 ModalRules <> w:67 var
R4447:4450 ModalRules <> Impl defax
R4453:4455 ModalRules <> Box defax
R4458:4461 ModalRules <> Impl defax
R4463:4464 ModalRules <> φ:65 var
R4466:4467 ModalRules <> ψ:66 var
R4472:4475 ModalRules <> Impl defax
R4478:4480 ModalRules <> Box defax
R4482:4483 ModalRules <> φ:65 var
R4487:4489 ModalRules <> Box defax
R4491:4492 ModalRules <> ψ:66 var
R4531:4541 ModalRules <> forces_impl meth
R4531:4541 ModalRules <> forces_impl meth
R4531:4541 ModalRules <> forces_impl meth
R4569:4579 ModalRules <> forces_impl meth
R4569:4579 ModalRules <> forces_impl meth
R4569:4579 ModalRules <> forces_impl meth
R4606:4615 ModalRules <> forces_box meth
R4606:4615 ModalRules <> forces_box meth
R4606:4615 ModalRules <> forces_box meth
R4637:4646 ModalRules <> forces_box meth
R4637:4646 ModalRules <> forces_box meth
R4637:4646 ModalRules <> forces_box meth
R4667:4676 ModalRules <> forces_box meth
R4667:4676 ModalRules <> forces_box meth
R4667:4676 ModalRules <> forces_box meth
R4809:4819 ModalRules <> forces_impl meth
R4809:4819 ModalRules <> forces_impl meth
R4809:4819 ModalRules <> forces_impl meth
prf 4902:4911 <> provable_K
R4915:4927 ModalRules <> Cap_ForcesBox class
R4929:4937 ModalRules <> can_world defax
R4939:4943 ModalRules <> can_R defax
R4945:4950 ModalRules <> forces defax
binder 4915:4950 <> H:68
R4955:4968 ModalRules <> Cap_ForcesImpl class
R4970:4978 ModalRules <> can_world defax
R4980:4984 ModalRules <> can_R defax
R4986:4991 ModalRules <> forces defax
binder 4955:4991 <> H0:69
binder 5003:5004 <> φ:70
binder 5006:5007 <> ψ:71
R5010:5013 ModalRules <> Prov defax
R5016:5019 ModalRules <> Impl defax
R5022:5024 ModalRules <> Box defax
R5027:5030 ModalRules <> Impl defax
R5032:5033 ModalRules <> φ:70 var
R5035:5036 ModalRules <> ψ:71 var
R5041:5044 ModalRules <> Impl defax
R5047:5049 ModalRules <> Box defax
R5051:5052 ModalRules <> φ:70 var
R5056:5058 ModalRules <> Box defax
R5060:5061 ModalRules <> ψ:71 var
R5096:5118 ModalRules <> completeness_from_truth defax
R5096:5118 ModalRules <> completeness_from_truth defax
R5136:5142 ModalRules <> valid_K thm
R5136:5142 ModalRules <> valid_K thm
