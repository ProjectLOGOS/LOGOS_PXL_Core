{
  "timestamp": "2025-10-19T16:16:00.071752",
  "repository_version": "v0.4.2-recovery",
  "total_v_files": 180,
  "total_admitted_proofs": 42,
  "overall_verification_ratio": 0.95,
  "modules": [
    {
      "module_path": "PXL_IEL_overlay_system\\modules\\infra",
      "total_v_files": 27,
      "files_with_admitted": 2,
      "total_admitted_count": 3,
      "verification_ratio": 0.9259259259259259,
      "priority_level": "medium"
    },
    {
      "module_path": "PXL_IEL_overlay_system\\modules\\IEL",
      "total_v_files": 134,
      "files_with_admitted": 7,
      "total_admitted_count": 39,
      "verification_ratio": 0.9477611940298507,
      "priority_level": "medium"
    },
    {
      "module_path": "PXL_IEL_overlay_system\\coq",
      "total_v_files": 4,
      "files_with_admitted": 0,
      "total_admitted_count": 0,
      "verification_ratio": 1.0,
      "priority_level": "medium"
    }
  ],
  "admitted_proofs": [
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\infra\\adaptive\\ModalProbabilistic.v",
      "line_number": 145,
      "theorem_name": null,
      "context": "apply Hcons.\n      (* Show Q was in original beliefs *)\n      admit. (* Requires proper remove function properties *)\n  Admitted.\n  \n  (** Lemma: Trinity-Coherence is preserved under bounded probabilistic updates *)\n  Lemma trinity_coherence_preservation : forall operation_type context P p horizon,",
      "priority": "medium",
      "module_category": "infrastructure"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\infra\\adaptive\\ModalProbabilistic.v",
      "line_number": 325,
      "theorem_name": null,
      "context": "- (* uncertainty bound *)\n    rewrite Hprob, Hhor, Hmax. simpl.\n    lra.\nAdmitted.\n\n(**\nIntegration Notes for v0.7 Adaptive Reasoning:",
      "priority": "medium",
      "module_category": "infrastructure"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\infra\\arithmo\\Core\\Numbers.v",
      "line_number": 95,
      "theorem_name": null,
      "context": "* (* d >= 2: we have a proper divisor \u2265 2, contradicting primality *)\n          (* Computational contradiction: proper divisor exists but algorithm claims prime *)\n          admit. (* Bounded verification: can derive False from algorithmic inconsistency *)\nAdmitted. (* Bounded computational verification - can be completed through exhaustive checking *)\nEnd ArithmoPraxis_Numbers.",
      "priority": "medium",
      "module_category": "core"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 3,
      "theorem_name": "pairwise_convergence",
      "context": "(* ChronoProofs.v - PXL Canonical Constructive Proofs *)\n\n(* TODO: remove Admitted. \u2014 constructive oTheorem pairwise_convergence :\n  forall (e : ChronoAxioms.Eternal),\n    ChronoMappings.lift_from_A (ChronoMappings.project_to_A e) =\n    ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) /\\",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 10,
      "theorem_name": "pairwise_convergence",
      "context": "ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) =\n    ChronoMappings.lift_from_C (ChronoMappings.project_to_C e).\nProof.\n  Admitted.axioms. *)\n\nRequire Import PXLs.Internal Emergent Logics.Infra.ChronoPraxis.Substrate.ChronoAxioms\n               PXLs.Internal Emergent Logics.Infra.ChronoPraxis.Substrate.Bijection",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 51,
      "theorem_name": "eternal_temporal_soundness_A",
      "context": "Theorem eternal_temporal_soundness_A :\n  forall (e : ChronoAxioms.Eternal), ChronoMappings.lift_from_A (ChronoMappings.project_to_A e) = e.\nProof.\n  Admitted.\n\nTheorem eternal_temporal_soundness_B :\n  forall (e : ChronoAxioms.Eternal), ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) = e.",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 56,
      "theorem_name": "eternal_temporal_soundness_B",
      "context": "Theorem eternal_temporal_soundness_B :\n  forall (e : ChronoAxioms.Eternal), ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) = e.\nProof.\n  Admitted.\n\nTheorem eternal_temporal_soundness_C :\n  forall (e : ChronoAxioms.Eternal), ChronoMappings.lift_from_C (ChronoMappings.project_to_C e) = e.",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 61,
      "theorem_name": "eternal_temporal_soundness_C",
      "context": "Theorem eternal_temporal_soundness_C :\n  forall (e : ChronoAxioms.Eternal), ChronoMappings.lift_from_C (ChronoMappings.project_to_C e) = e.\nProof.\n  Admitted.\n\n(* Completeness: temporal -> ChronoAxioms.Eternal -> temporal preserves identity *)\nTheorem temporal_eternal_completeness_A :",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 67,
      "theorem_name": "temporal_eternal_completeness_A",
      "context": "Theorem temporal_eternal_completeness_A :\n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_A), ChronoMappings.project_to_A (ChronoMappings.lift_from_A p) = p.\nProof.\n  Admitted.\n\nTheorem temporal_eternal_completeness_B :\n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_B), ChronoMappings.project_to_B (ChronoMappings.lift_from_B p) = p.",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 72,
      "theorem_name": "temporal_eternal_completeness_B",
      "context": "Theorem temporal_eternal_completeness_B :\n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_B), ChronoMappings.project_to_B (ChronoMappings.lift_from_B p) = p.\nProof.\n  Admitted.\n\nTheorem temporal_eternal_completeness_C :\n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_C), ChronoMappings.project_to_C (ChronoMappings.lift_from_C p) = p.",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 77,
      "theorem_name": "temporal_eternal_completeness_C",
      "context": "Theorem temporal_eternal_completeness_C :\n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_C), ChronoMappings.project_to_C (ChronoMappings.lift_from_C p) = p.\nProof.\n  Admitted.\n\n(* === Cross-Mode Bijection Proofs === *)",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 85,
      "theorem_name": "cross_mode_bijection_AB",
      "context": "Theorem cross_mode_bijection_AB :\n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_A), ChronoMappings.B_to_A (ChronoMappings.A_to_B p) = p.\nProof.\n  Admitted.\n\nTheorem cross_mode_bijection_BA :\n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_B), ChronoMappings.A_to_B (ChronoMappings.B_to_A p) = p.",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 90,
      "theorem_name": "cross_mode_bijection_BA",
      "context": "Theorem cross_mode_bijection_BA :\n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_B), ChronoMappings.A_to_B (ChronoMappings.B_to_A p) = p.\nProof.\n  Admitted.\n\n(* === Temporal Convergence Theorems === *)",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 103,
      "theorem_name": "universal_temporal_convergence",
      "context": "Theorem universal_temporal_convergence :\n  forall (e : ChronoAxioms.Eternal), temporal_convergence_formula e.\nProof.\n  Admitted.\n\n(* === Triune Unity Theorem === *)\n(* This is the central theorem proving A/B/C theory compatibility *)",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 115,
      "theorem_name": "triune_temporal_unity",
      "context": "ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) =\n    ChronoMappings.lift_from_C (ChronoMappings.project_to_C e).\nProof.\n  Admitted.\n\n(* === Chronological Collapse Prevention === *)\n(* Proves that temporal modes remain distinct despite convergence *)",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 123,
      "theorem_name": "chronological_non_collapse",
      "context": "Theorem chronological_non_collapse :\n  ChronoAxioms.chi_A <> ChronoAxioms.chi_B /\\ ChronoAxioms.chi_B <> ChronoAxioms.chi_C /\\ ChronoAxioms.chi_A <> ChronoAxioms.chi_C.\nProof.\n  Admitted.\n\n(* === Temporal Resolution Soundness === *)\n(* Mapping between temporal states preserves logical identity *)",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 134,
      "theorem_name": "temporal_resolution_soundness",
      "context": "ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) = e /\\\n    ChronoMappings.lift_from_C (ChronoMappings.project_to_C e) = e.\nProof.\n  Admitted.\n\n(* === Main Constructive Theorem === *)\n(* ChronoPraxis preserves PXL's fundamental logical laws *)",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 168,
      "theorem_name": "bijection_round_trip_convergence",
      "context": "ChronoMappings.B_to_A (ChronoMappings.A_to_B pA) = pA /\\\n    ChronoMappings.A_to_B (ChronoMappings.B_to_A (ChronoMappings.A_to_B pA)) = ChronoMappings.A_to_B pA.\nProof.\n  Admitted.\n\nEnd ChronoProofs.",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 248,
      "theorem_name": "temporal_consistency",
      "context": "ChronoMappings.A_to_C pA = (ChronoMappings.B_to_C (ChronoMappings.A_to_B pA)) /\\\n    ChronoMappings.A_to_C pA = (ChronoMappings.A_to_C pA).\nProof.\n  Admitted.\n\n(* Quick smoketest lemmas (ensure rewrite works across contexts) *)\nLemma ac_eq_bc (pA:PA) : ChronoMappings.A_to_C pA = ChronoMappings.B_to_C (ChronoMappings.A_to_B pA).",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\_experimental\\ChronoPraxis_Theorems\\ChronoProofs.v",
      "line_number": 254,
      "theorem_name": "since",
      "context": "Lemma ac_eq_bc (pA:PA) : ChronoMappings.A_to_C pA = ChronoMappings.B_to_C (ChronoMappings.A_to_B pA).\nProof.\n  (* By definition since map_AC := compose_bij map_AB map_BC *)\n  Admitted.\n\nEnd ConstructiveCore.",
      "priority": "low",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\interfaces\\ChronoPraxis.v",
      "line_number": 3,
      "theorem_name": null,
      "context": "(* ChronoPraxis.v - Main Interface Module *)\n\n(* TODO: remove Admitted. \u2014 constructive only. No classical axioms. *)\n\n(* Minimal definitions to support the proofs *)\nModule ChronoAxioms.",
      "priority": "medium",
      "module_category": "infrastructure"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\substrate\\ChronoZAgents.v",
      "line_number": 60,
      "theorem_name": "agent_identity_temporal_persistence",
      "context": "forall (a1 a2 : ChronoAgent),\n    agent_evolution a1 a2 -> agent_id a1 = agent_id a2.\nProof.\nAdmitted. *)\n\nTheorem telic_agent_forecast_consistency :\n  forall (ta : TelicAgent) (s : ChronoState),",
      "priority": "medium",
      "module_category": "core"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 3,
      "theorem_name": "pairwise_convergence",
      "context": "(* ChronoProofs.v - PXL Canonical Constructive Proofs *)\n\n(* TODO: remove Admitted. \u2014 constructive oTheorem pairwise_convergence : \n  forall (e : ChronoAxioms.Eternal),\n    ChronoMappings.lift_from_A (ChronoMappings.project_to_A e) = \n    ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) /\\",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 10,
      "theorem_name": "pairwise_convergence",
      "context": "ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) = \n    ChronoMappings.lift_from_C (ChronoMappings.project_to_C e).\nProof.\n  Admitted.axioms. *)\n\nRequire Import PXLs.IEL.Infra.ChronoPraxis.Substrate.ChronoAxioms\n               PXLs.IEL.Infra.ChronoPraxis.Substrate.Bijection",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 51,
      "theorem_name": "eternal_temporal_soundness_A",
      "context": "Theorem eternal_temporal_soundness_A : \n  forall (e : ChronoAxioms.Eternal), ChronoMappings.lift_from_A (ChronoMappings.project_to_A e) = e.\nProof.\n  Admitted.\n\nTheorem eternal_temporal_soundness_B : \n  forall (e : ChronoAxioms.Eternal), ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) = e.",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 56,
      "theorem_name": "eternal_temporal_soundness_B",
      "context": "Theorem eternal_temporal_soundness_B : \n  forall (e : ChronoAxioms.Eternal), ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) = e.\nProof.\n  Admitted.\n\nTheorem eternal_temporal_soundness_C : \n  forall (e : ChronoAxioms.Eternal), ChronoMappings.lift_from_C (ChronoMappings.project_to_C e) = e.",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 61,
      "theorem_name": "eternal_temporal_soundness_C",
      "context": "Theorem eternal_temporal_soundness_C : \n  forall (e : ChronoAxioms.Eternal), ChronoMappings.lift_from_C (ChronoMappings.project_to_C e) = e.\nProof.\n  Admitted.\n\n(* Completeness: temporal -> ChronoAxioms.Eternal -> temporal preserves identity *)\nTheorem temporal_eternal_completeness_A :",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 67,
      "theorem_name": "temporal_eternal_completeness_A",
      "context": "Theorem temporal_eternal_completeness_A : \n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_A), ChronoMappings.project_to_A (ChronoMappings.lift_from_A p) = p.\nProof.\n  Admitted.\n\nTheorem temporal_eternal_completeness_B : \n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_B), ChronoMappings.project_to_B (ChronoMappings.lift_from_B p) = p.",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 72,
      "theorem_name": "temporal_eternal_completeness_B",
      "context": "Theorem temporal_eternal_completeness_B : \n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_B), ChronoMappings.project_to_B (ChronoMappings.lift_from_B p) = p.\nProof.\n  Admitted.\n\nTheorem temporal_eternal_completeness_C : \n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_C), ChronoMappings.project_to_C (ChronoMappings.lift_from_C p) = p.",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 77,
      "theorem_name": "temporal_eternal_completeness_C",
      "context": "Theorem temporal_eternal_completeness_C : \n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_C), ChronoMappings.project_to_C (ChronoMappings.lift_from_C p) = p.\nProof.\n  Admitted.\n\n(* === Cross-Mode Bijection Proofs === *)",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 85,
      "theorem_name": "cross_mode_bijection_AB",
      "context": "Theorem cross_mode_bijection_AB : \n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_A), ChronoMappings.B_to_A (ChronoMappings.A_to_B p) = p.\nProof.\n  Admitted.\n\nTheorem cross_mode_bijection_BA : \n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_B), ChronoMappings.A_to_B (ChronoMappings.B_to_A p) = p.",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 90,
      "theorem_name": "cross_mode_bijection_BA",
      "context": "Theorem cross_mode_bijection_BA : \n  forall (p : ChronoAxioms.P_chi ChronoAxioms.chi_B), ChronoMappings.A_to_B (ChronoMappings.B_to_A p) = p.\nProof.\n  Admitted.\n\n(* === Temporal Convergence Theorems === *)",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 103,
      "theorem_name": "universal_temporal_convergence",
      "context": "Theorem universal_temporal_convergence : \n  forall (e : ChronoAxioms.Eternal), temporal_convergence_formula e.\nProof.\n  Admitted.\n\n(* === Triune Unity Theorem === *)\n(* This is the central theorem proving A/B/C theory compatibility *)",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 115,
      "theorem_name": "triune_temporal_unity",
      "context": "ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) = \n    ChronoMappings.lift_from_C (ChronoMappings.project_to_C e).\nProof.\n  Admitted.\n\n(* === Chronological Collapse Prevention === *)\n(* Proves that temporal modes remain distinct despite convergence *)",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 123,
      "theorem_name": "chronological_non_collapse",
      "context": "Theorem chronological_non_collapse : \n  ChronoAxioms.chi_A <> ChronoAxioms.chi_B /\\ ChronoAxioms.chi_B <> ChronoAxioms.chi_C /\\ ChronoAxioms.chi_A <> ChronoAxioms.chi_C.\nProof.\n  Admitted.\n\n(* === Temporal Resolution Soundness === *)\n(* Mapping between temporal states preserves logical identity *)",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 134,
      "theorem_name": "temporal_resolution_soundness",
      "context": "ChronoMappings.lift_from_B (ChronoMappings.project_to_B e) = e /\\\n    ChronoMappings.lift_from_C (ChronoMappings.project_to_C e) = e.\nProof.\n  Admitted.\n\n(* === Main Constructive Theorem === *)\n(* ChronoPraxis preserves PXL's fundamental logical laws *)",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 168,
      "theorem_name": "bijection_round_trip_convergence",
      "context": "ChronoMappings.B_to_A (ChronoMappings.A_to_B pA) = pA /\\\n    ChronoMappings.A_to_B (ChronoMappings.B_to_A (ChronoMappings.A_to_B pA)) = ChronoMappings.A_to_B pA.\nProof.\n  Admitted.\n\nEnd ChronoProofs.",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 248,
      "theorem_name": "temporal_consistency",
      "context": "ChronoMappings.A_to_C pA = (ChronoMappings.B_to_C (ChronoMappings.A_to_B pA)) /\\ \n    ChronoMappings.A_to_C pA = (ChronoMappings.A_to_C pA).\nProof.\n  Admitted.\n\n(* Quick smoketest lemmas (ensure rewrite works across contexts) *)  \nLemma ac_eq_bc (pA:PA) : ChronoMappings.A_to_C pA = ChronoMappings.B_to_C (ChronoMappings.A_to_B pA).",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\infra\\ChronoPraxis\\theorems\\experimental\\ChronoProofs.v",
      "line_number": 254,
      "theorem_name": "since",
      "context": "Lemma ac_eq_bc (pA:PA) : ChronoMappings.A_to_C pA = ChronoMappings.B_to_C (ChronoMappings.A_to_B pA).\nProof. \n  (* By definition since map_AC := compose_bij map_AB map_BC *)\n  Admitted.\n\nEnd ConstructiveCore.",
      "priority": "medium",
      "module_category": "experimental"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\CosmoPraxis\\subdomains\\Space\\Spec.v",
      "line_number": 7,
      "theorem_name": "conservative",
      "context": "Import TheoProps.\n  Definition V := Space.\n  Theorem conservative : forall \u03c6, V \u03c6 -> \u03c6. (* prove from PXL lemmas chosen for Space *)\nAdmitted. (* must be proved before CI passes; no Admitted in final branch *)\nEnd SpaceSub.",
      "priority": "medium",
      "module_category": "other"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\Axiopraxis\\subdomains\\Beauty\\Spec.v",
      "line_number": 7,
      "theorem_name": "conservative",
      "context": "Import TheoProps.\n  Definition V := Beauty.\n  Theorem conservative : forall \u03c6, V \u03c6 -> \u03c6. (* prove from PXL lemmas chosen for Beauty *)\nAdmitted. (* must be proved before CI passes; no Admitted in final branch *)\nEnd BeautySub.",
      "priority": "medium",
      "module_category": "other"
    },
    {
      "file_path": "PXL_IEL_overlay_system\\modules\\IEL\\AnthroPraxis\\subdomains\\Life\\Spec.v",
      "line_number": 7,
      "theorem_name": "conservative",
      "context": "Import TheoProps.\n  Definition V := Life.\n  Theorem conservative : forall \u03c6, V \u03c6 -> \u03c6. (* prove from PXL lemmas chosen for Life *)\nAdmitted. (* must be proved before CI passes; no Admitted in final branch *)\nEnd LifeSub.",
      "priority": "medium",
      "module_category": "other"
    }
  ],
  "recommendations": [
    "\ud83d\udfe1 MEDIUM PRIORITY: 25 infrastructure proofs",
    "\ud83d\udfe2 LOW PRIORITY: 17 experimental/example proofs",
    "\ud83d\udca1 Consider quarantining 34 experimental proofs to _experimental/ directories"
  ]
}
